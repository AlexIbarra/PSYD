   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"uart.c"
  21              	.Ltext0:
  22              		.file 1 "../src/uart.c"
 1882              		.align	2
 1883              		.global	uart0_init
 1885              	uart0_init:
 1886              	.LFB0:
   1:../src/uart.c **** /*
   2:../src/uart.c ****  * uart.c
   3:../src/uart.c ****  *
   4:../src/uart.c ****  *  Created on: 05/04/2016
   5:../src/uart.c ****  *      Author: usuario_local
   6:../src/uart.c ****  */
   7:../src/uart.c **** 
   8:../src/uart.c **** #include <uart.h>
   9:../src/uart.c **** #include <s3c44b0x.h>
  10:../src/uart.c **** #include <s3cev40.h>
  11:../src/uart.c **** 
  12:../src/uart.c **** /*
  13:../src/uart.c **** ** Configura la UART para una comunicación según los siguientes parámetros:
  14:../src/uart.c **** **   E/S programada (por pooling)
  15:../src/uart.c **** **   Control manual de flujo
  16:../src/uart.c **** **   FIFOs: activadas
  17:../src/uart.c **** **   Protocolo: normal, sin paridad, 1 bit de stop, 8 bits de datos
  18:../src/uart.c **** **   Velocidad: 115200 baudios
  19:../src/uart.c **** **   Sin tratamiento de errores
  20:../src/uart.c **** */
  21:../src/uart.c **** void uart0_init( void ){
 1887              		.loc 1 21 0
 1888              		.cfi_startproc
 1889              		@ Function supports interworking.
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 1, uses_anonymous_args = 0
 1892 0000 0DC0A0E1 		mov	ip, sp
 1893              	.LCFI0:
 1894              		.cfi_def_cfa_register 12
 1895 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1896 0008 04B04CE2 		sub	fp, ip, #4
 1897              		.cfi_offset 14, -8
 1898              		.cfi_offset 13, -12
 1899              		.cfi_offset 11, -16
 1900              	.LCFI1:
 1901              		.cfi_def_cfa 11, 4
  22:../src/uart.c **** 	ULCON0 &= ~(1<<6) & ~(1<<5) & ~(1<<4) & ~(1<<3) & ~(1<<2);
 1902              		.loc 1 22 0
 1903 000c 1D36A0E3 		mov	r3, #30408704
 1904 0010 1D26A0E3 		mov	r2, #30408704
 1905 0014 002092E5 		ldr	r2, [r2, #0]
 1906 0018 7C20C2E3 		bic	r2, r2, #124
 1907 001c 002083E5 		str	r2, [r3, #0]
  23:../src/uart.c **** 	ULCON0 |= 3;
 1908              		.loc 1 23 0
 1909 0020 1D36A0E3 		mov	r3, #30408704
 1910 0024 1D26A0E3 		mov	r2, #30408704
 1911 0028 002092E5 		ldr	r2, [r2, #0]
 1912 002c 032082E3 		orr	r2, r2, #3
 1913 0030 002083E5 		str	r2, [r3, #0]
  24:../src/uart.c **** 	UBRDIV0 = 34;
 1914              		.loc 1 24 0
 1915 0034 74309FE5 		ldr	r3, .L2
 1916 0038 2220A0E3 		mov	r2, #34
 1917 003c 002083E5 		str	r2, [r3, #0]
  25:../src/uart.c **** 	UMCON0 &= ~(1<<4);
 1918              		.loc 1 25 0
 1919 0040 6C309FE5 		ldr	r3, .L2+4
 1920 0044 68209FE5 		ldr	r2, .L2+4
 1921 0048 002092E5 		ldr	r2, [r2, #0]
 1922 004c 1020C2E3 		bic	r2, r2, #16
 1923 0050 002083E5 		str	r2, [r3, #0]
  26:../src/uart.c **** 	UCON0 |= (1<<2) | (1<<0);
 1924              		.loc 1 26 0
 1925 0054 5C309FE5 		ldr	r3, .L2+8
 1926 0058 58209FE5 		ldr	r2, .L2+8
 1927 005c 002092E5 		ldr	r2, [r2, #0]
 1928 0060 052082E3 		orr	r2, r2, #5
 1929 0064 002083E5 		str	r2, [r3, #0]
  27:../src/uart.c **** 	UCON0 &= ~(1<<7) & ~(1<<6) & ~(1<<5) & ~(1<<4);
 1930              		.loc 1 27 0
 1931 0068 48309FE5 		ldr	r3, .L2+8
 1932 006c 44209FE5 		ldr	r2, .L2+8
 1933 0070 002092E5 		ldr	r2, [r2, #0]
 1934 0074 F020C2E3 		bic	r2, r2, #240
 1935 0078 002083E5 		str	r2, [r3, #0]
  28:../src/uart.c **** 	UFCON0 |= (1<<0);
 1936              		.loc 1 28 0
 1937 007c 38309FE5 		ldr	r3, .L2+12
 1938 0080 34209FE5 		ldr	r2, .L2+12
 1939 0084 002092E5 		ldr	r2, [r2, #0]
 1940 0088 012082E3 		orr	r2, r2, #1
 1941 008c 002083E5 		str	r2, [r3, #0]
  29:../src/uart.c **** 	UFCON0 &= ~(1<<2) & ~(1<<1);
 1942              		.loc 1 29 0
 1943 0090 24309FE5 		ldr	r3, .L2+12
 1944 0094 20209FE5 		ldr	r2, .L2+12
 1945 0098 002092E5 		ldr	r2, [r2, #0]
 1946 009c 0620C2E3 		bic	r2, r2, #6
 1947 00a0 002083E5 		str	r2, [r3, #0]
  30:../src/uart.c **** }
 1948              		.loc 1 30 0
 1949 00a4 0CD04BE2 		sub	sp, fp, #12
 1950 00a8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1951 00ac 1EFF2FE1 		bx	lr
 1952              	.L3:
 1953              		.align	2
 1954              	.L2:
 1955 00b0 2800D001 		.word	30408744
 1956 00b4 0C00D001 		.word	30408716
 1957 00b8 0400D001 		.word	30408708
 1958 00bc 0800D001 		.word	30408712
 1959              		.cfi_endproc
 1960              	.LFE0:
 1962              		.align	2
 1963              		.global	uart0_putchar
 1965              	uart0_putchar:
 1966              	.LFB1:
  31:../src/uart.c **** 
  32:../src/uart.c **** /*
  33:../src/uart.c **** ** Envía un caracter por la UART
  34:../src/uart.c **** */
  35:../src/uart.c **** void uart0_putchar( char ch ){
 1967              		.loc 1 35 0
 1968              		.cfi_startproc
 1969              		@ Function supports interworking.
 1970              		@ args = 0, pretend = 0, frame = 8
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 00c0 0DC0A0E1 		mov	ip, sp
 1973              	.LCFI2:
 1974              		.cfi_def_cfa_register 12
 1975 00c4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1976 00c8 04B04CE2 		sub	fp, ip, #4
 1977              		.cfi_offset 14, -8
 1978              		.cfi_offset 13, -12
 1979              		.cfi_offset 11, -16
 1980              	.LCFI3:
 1981              		.cfi_def_cfa 11, 4
 1982 00cc 08D04DE2 		sub	sp, sp, #8
 1983 00d0 0030A0E1 		mov	r3, r0
 1984 00d4 0D304BE5 		strb	r3, [fp, #-13]
  36:../src/uart.c **** 	while(((UFSTAT0 >> 9) & 1) == 1);
 1985              		.loc 1 36 0
 1986 00d8 0000A0E1 		mov	r0, r0	@ nop
 1987              	.L5:
 1988              		.loc 1 36 0 is_stmt 0 discriminator 1
 1989 00dc 2C309FE5 		ldr	r3, .L6
 1990 00e0 003093E5 		ldr	r3, [r3, #0]
 1991 00e4 A334A0E1 		mov	r3, r3, lsr #9
 1992 00e8 013003E2 		and	r3, r3, #1
 1993 00ec FF3003E2 		and	r3, r3, #255
 1994 00f0 000053E3 		cmp	r3, #0
 1995 00f4 F8FFFF1A 		bne	.L5
  37:../src/uart.c **** 	UTXH0 = ch;
 1996              		.loc 1 37 0 is_stmt 1
 1997 00f8 14309FE5 		ldr	r3, .L6+4
 1998 00fc 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1999 0100 002083E5 		str	r2, [r3, #0]
  38:../src/uart.c **** }
 2000              		.loc 1 38 0
 2001 0104 0CD04BE2 		sub	sp, fp, #12
 2002 0108 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2003 010c 1EFF2FE1 		bx	lr
 2004              	.L7:
 2005              		.align	2
 2006              	.L6:
 2007 0110 1800D001 		.word	30408728
 2008 0114 2000D001 		.word	30408736
 2009              		.cfi_endproc
 2010              	.LFE1:
 2012              		.align	2
 2013              		.global	uart0_puts
 2015              	uart0_puts:
 2016              	.LFB2:
  39:../src/uart.c **** 
  40:../src/uart.c **** /*
  41:../src/uart.c **** ** Envía una cadena de caracteres por la UART
  42:../src/uart.c **** */
  43:../src/uart.c **** void uart0_puts( char *s ){
 2017              		.loc 1 43 0
 2018              		.cfi_startproc
 2019              		@ Function supports interworking.
 2020              		@ args = 0, pretend = 0, frame = 16
 2021              		@ frame_needed = 1, uses_anonymous_args = 0
 2022 0118 0DC0A0E1 		mov	ip, sp
 2023              	.LCFI4:
 2024              		.cfi_def_cfa_register 12
 2025 011c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2026 0120 04B04CE2 		sub	fp, ip, #4
 2027              		.cfi_offset 14, -8
 2028              		.cfi_offset 13, -12
 2029              		.cfi_offset 11, -16
 2030              	.LCFI5:
 2031              		.cfi_def_cfa 11, 4
 2032 0124 10D04DE2 		sub	sp, sp, #16
 2033 0128 18000BE5 		str	r0, [fp, #-24]
  44:../src/uart.c **** 	int i=0;
 2034              		.loc 1 44 0
 2035 012c 0030A0E3 		mov	r3, #0
 2036 0130 10300BE5 		str	r3, [fp, #-16]
  45:../src/uart.c **** 	while(s[i] != '\0'){
 2037              		.loc 1 45 0
 2038 0134 080000EA 		b	.L9
 2039              	.L10:
  46:../src/uart.c **** 		uart0_putchar(s[i]);
 2040              		.loc 1 46 0
 2041 0138 10301BE5 		ldr	r3, [fp, #-16]
 2042 013c 18201BE5 		ldr	r2, [fp, #-24]
 2043 0140 033082E0 		add	r3, r2, r3
 2044 0144 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2045 0148 0300A0E1 		mov	r0, r3
 2046 014c FEFFFFEB 		bl	uart0_putchar
  47:../src/uart.c **** 		i++;
 2047              		.loc 1 47 0
 2048 0150 10301BE5 		ldr	r3, [fp, #-16]
 2049 0154 013083E2 		add	r3, r3, #1
 2050 0158 10300BE5 		str	r3, [fp, #-16]
 2051              	.L9:
  45:../src/uart.c **** 	while(s[i] != '\0'){
 2052              		.loc 1 45 0 discriminator 1
 2053 015c 10301BE5 		ldr	r3, [fp, #-16]
 2054 0160 18201BE5 		ldr	r2, [fp, #-24]
 2055 0164 033082E0 		add	r3, r2, r3
 2056 0168 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2057 016c 000053E3 		cmp	r3, #0
 2058 0170 F0FFFF1A 		bne	.L10
  48:../src/uart.c **** 	}
  49:../src/uart.c **** }
 2059              		.loc 1 49 0
 2060 0174 0CD04BE2 		sub	sp, fp, #12
 2061 0178 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2062 017c 1EFF2FE1 		bx	lr
 2063              		.cfi_endproc
 2064              	.LFE2:
 2066              		.align	2
 2067              		.global	uart0_putint
 2069              	uart0_putint:
 2070              	.LFB3:
  50:../src/uart.c **** 
  51:../src/uart.c **** /*
  52:../src/uart.c **** ** Envía una cadena de caracteres por la UART que representa en decimal al entero que toma como arg
  53:../src/uart.c **** */
  54:../src/uart.c **** void uart0_putint( int32 i ){
 2071              		.loc 1 54 0
 2072              		.cfi_startproc
 2073              		@ Function supports interworking.
 2074              		@ args = 0, pretend = 0, frame = 72
 2075              		@ frame_needed = 1, uses_anonymous_args = 0
 2076 0180 0DC0A0E1 		mov	ip, sp
 2077              	.LCFI6:
 2078              		.cfi_def_cfa_register 12
 2079 0184 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2080 0188 04B04CE2 		sub	fp, ip, #4
 2081              		.cfi_offset 14, -8
 2082              		.cfi_offset 13, -12
 2083              		.cfi_offset 11, -16
 2084              	.LCFI7:
 2085              		.cfi_def_cfa 11, 4
 2086 018c 48D04DE2 		sub	sp, sp, #72
 2087 0190 50000BE5 		str	r0, [fp, #-80]
  55:../src/uart.c **** 	int32 num=i, dig=0, tam=0, numero[11], chorra=0;
 2088              		.loc 1 55 0
 2089 0194 50301BE5 		ldr	r3, [fp, #-80]
 2090 0198 10300BE5 		str	r3, [fp, #-16]
 2091 019c 0030A0E3 		mov	r3, #0
 2092 01a0 1C300BE5 		str	r3, [fp, #-28]
 2093 01a4 0030A0E3 		mov	r3, #0
 2094 01a8 14300BE5 		str	r3, [fp, #-20]
 2095 01ac 0030A0E3 		mov	r3, #0
 2096 01b0 18300BE5 		str	r3, [fp, #-24]
  56:../src/uart.c **** 
  57:../src/uart.c **** 	if(num<0){
 2097              		.loc 1 57 0
 2098 01b4 10301BE5 		ldr	r3, [fp, #-16]
 2099 01b8 000053E3 		cmp	r3, #0
 2100 01bc 040000AA 		bge	.L12
  58:../src/uart.c **** 		uart0_putchar('-');
 2101              		.loc 1 58 0
 2102 01c0 2D00A0E3 		mov	r0, #45
 2103 01c4 FEFFFFEB 		bl	uart0_putchar
  59:../src/uart.c **** 		num*=-1;
 2104              		.loc 1 59 0
 2105 01c8 10301BE5 		ldr	r3, [fp, #-16]
 2106 01cc 003063E2 		rsb	r3, r3, #0
 2107 01d0 10300BE5 		str	r3, [fp, #-16]
 2108              	.L12:
  60:../src/uart.c **** 	}
  61:../src/uart.c **** 
  62:../src/uart.c **** 	dig=num%10;
 2109              		.loc 1 62 0
 2110 01d4 10201BE5 		ldr	r2, [fp, #-16]
 2111 01d8 64319FE5 		ldr	r3, .L17
 2112 01dc 9213C3E0 		smull	r1, r3, r2, r3
 2113 01e0 4311A0E1 		mov	r1, r3, asr #2
 2114 01e4 C23FA0E1 		mov	r3, r2, asr #31
 2115 01e8 011063E0 		rsb	r1, r3, r1
 2116 01ec 0130A0E1 		mov	r3, r1
 2117 01f0 0331A0E1 		mov	r3, r3, asl #2
 2118 01f4 013083E0 		add	r3, r3, r1
 2119 01f8 8330A0E1 		mov	r3, r3, asl #1
 2120 01fc 023063E0 		rsb	r3, r3, r2
 2121 0200 1C300BE5 		str	r3, [fp, #-28]
  63:../src/uart.c **** 	num/=10;
 2122              		.loc 1 63 0
 2123 0204 10301BE5 		ldr	r3, [fp, #-16]
 2124 0208 34219FE5 		ldr	r2, .L17
 2125 020c 9312C2E0 		smull	r1, r2, r3, r2
 2126 0210 4221A0E1 		mov	r2, r2, asr #2
 2127 0214 C33FA0E1 		mov	r3, r3, asr #31
 2128 0218 023063E0 		rsb	r3, r3, r2
 2129 021c 10300BE5 		str	r3, [fp, #-16]
  64:../src/uart.c **** 	numero[chorra]=dig;
 2130              		.loc 1 64 0
 2131 0220 18201BE5 		ldr	r2, [fp, #-24]
 2132 0224 3B30E0E3 		mvn	r3, #59
 2133 0228 0221A0E1 		mov	r2, r2, asl #2
 2134 022c 0C104BE2 		sub	r1, fp, #12
 2135 0230 022081E0 		add	r2, r1, r2
 2136 0234 033082E0 		add	r3, r2, r3
 2137 0238 1C201BE5 		ldr	r2, [fp, #-28]
 2138 023c 002083E5 		str	r2, [r3, #0]
  65:../src/uart.c **** 	tam++;
 2139              		.loc 1 65 0
 2140 0240 14301BE5 		ldr	r3, [fp, #-20]
 2141 0244 013083E2 		add	r3, r3, #1
 2142 0248 14300BE5 		str	r3, [fp, #-20]
  66:../src/uart.c **** 
  67:../src/uart.c **** 	while(num > 0){
 2143              		.loc 1 67 0
 2144 024c 200000EA 		b	.L13
 2145              	.L14:
  68:../src/uart.c **** 		dig=num%10;
 2146              		.loc 1 68 0
 2147 0250 10201BE5 		ldr	r2, [fp, #-16]
 2148 0254 E8309FE5 		ldr	r3, .L17
 2149 0258 9213C3E0 		smull	r1, r3, r2, r3
 2150 025c 4311A0E1 		mov	r1, r3, asr #2
 2151 0260 C23FA0E1 		mov	r3, r2, asr #31
 2152 0264 011063E0 		rsb	r1, r3, r1
 2153 0268 0130A0E1 		mov	r3, r1
 2154 026c 0331A0E1 		mov	r3, r3, asl #2
 2155 0270 013083E0 		add	r3, r3, r1
 2156 0274 8330A0E1 		mov	r3, r3, asl #1
 2157 0278 023063E0 		rsb	r3, r3, r2
 2158 027c 1C300BE5 		str	r3, [fp, #-28]
  69:../src/uart.c **** 		num/=10;
 2159              		.loc 1 69 0
 2160 0280 10301BE5 		ldr	r3, [fp, #-16]
 2161 0284 B8209FE5 		ldr	r2, .L17
 2162 0288 9312C2E0 		smull	r1, r2, r3, r2
 2163 028c 4221A0E1 		mov	r2, r2, asr #2
 2164 0290 C33FA0E1 		mov	r3, r3, asr #31
 2165 0294 023063E0 		rsb	r3, r3, r2
 2166 0298 10300BE5 		str	r3, [fp, #-16]
  70:../src/uart.c **** 		chorra++;
 2167              		.loc 1 70 0
 2168 029c 18301BE5 		ldr	r3, [fp, #-24]
 2169 02a0 013083E2 		add	r3, r3, #1
 2170 02a4 18300BE5 		str	r3, [fp, #-24]
  71:../src/uart.c **** 		numero[chorra]=dig;
 2171              		.loc 1 71 0
 2172 02a8 18201BE5 		ldr	r2, [fp, #-24]
 2173 02ac 3B30E0E3 		mvn	r3, #59
 2174 02b0 0221A0E1 		mov	r2, r2, asl #2
 2175 02b4 0C104BE2 		sub	r1, fp, #12
 2176 02b8 022081E0 		add	r2, r1, r2
 2177 02bc 033082E0 		add	r3, r2, r3
 2178 02c0 1C201BE5 		ldr	r2, [fp, #-28]
 2179 02c4 002083E5 		str	r2, [r3, #0]
  72:../src/uart.c **** 		tam++;
 2180              		.loc 1 72 0
 2181 02c8 14301BE5 		ldr	r3, [fp, #-20]
 2182 02cc 013083E2 		add	r3, r3, #1
 2183 02d0 14300BE5 		str	r3, [fp, #-20]
 2184              	.L13:
  67:../src/uart.c **** 	while(num > 0){
 2185              		.loc 1 67 0 discriminator 1
 2186 02d4 10301BE5 		ldr	r3, [fp, #-16]
 2187 02d8 000053E3 		cmp	r3, #0
 2188 02dc DBFFFFCA 		bgt	.L14
  73:../src/uart.c **** 	}
  74:../src/uart.c **** 
  75:../src/uart.c **** 	for(chorra=tam-1; chorra>=0; chorra--)
 2189              		.loc 1 75 0
 2190 02e0 14301BE5 		ldr	r3, [fp, #-20]
 2191 02e4 013043E2 		sub	r3, r3, #1
 2192 02e8 18300BE5 		str	r3, [fp, #-24]
 2193 02ec 0E0000EA 		b	.L15
 2194              	.L16:
  76:../src/uart.c **** 		uart0_putchar(numero[chorra]+48);
 2195              		.loc 1 76 0 discriminator 2
 2196 02f0 18201BE5 		ldr	r2, [fp, #-24]
 2197 02f4 3B30E0E3 		mvn	r3, #59
 2198 02f8 0221A0E1 		mov	r2, r2, asl #2
 2199 02fc 0C104BE2 		sub	r1, fp, #12
 2200 0300 022081E0 		add	r2, r1, r2
 2201 0304 033082E0 		add	r3, r2, r3
 2202 0308 003093E5 		ldr	r3, [r3, #0]
 2203 030c FF3003E2 		and	r3, r3, #255
 2204 0310 303083E2 		add	r3, r3, #48
 2205 0314 FF3003E2 		and	r3, r3, #255
 2206 0318 0300A0E1 		mov	r0, r3
 2207 031c FEFFFFEB 		bl	uart0_putchar
  75:../src/uart.c **** 	for(chorra=tam-1; chorra>=0; chorra--)
 2208              		.loc 1 75 0 discriminator 2
 2209 0320 18301BE5 		ldr	r3, [fp, #-24]
 2210 0324 013043E2 		sub	r3, r3, #1
 2211 0328 18300BE5 		str	r3, [fp, #-24]
 2212              	.L15:
  75:../src/uart.c **** 	for(chorra=tam-1; chorra>=0; chorra--)
 2213              		.loc 1 75 0 is_stmt 0 discriminator 1
 2214 032c 18301BE5 		ldr	r3, [fp, #-24]
 2215 0330 000053E3 		cmp	r3, #0
 2216 0334 EDFFFFAA 		bge	.L16
  77:../src/uart.c **** }
 2217              		.loc 1 77 0 is_stmt 1
 2218 0338 0CD04BE2 		sub	sp, fp, #12
 2219 033c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2220 0340 1EFF2FE1 		bx	lr
 2221              	.L18:
 2222              		.align	2
 2223              	.L17:
 2224 0344 67666666 		.word	1717986919
 2225              		.cfi_endproc
 2226              	.LFE3:
 2228              		.align	2
 2229              		.global	uart0_puthex
 2231              	uart0_puthex:
 2232              	.LFB4:
  78:../src/uart.c **** 
  79:../src/uart.c **** /*
  80:../src/uart.c **** ** Envía una cadena de caracteres por la UART que representa en hexadecimal al entero que toma como
  81:../src/uart.c **** */
  82:../src/uart.c **** void uart0_puthex( uint32 i ){
 2233              		.loc 1 82 0
 2234              		.cfi_startproc
 2235              		@ Function supports interworking.
 2236              		@ args = 0, pretend = 0, frame = 24
 2237              		@ frame_needed = 1, uses_anonymous_args = 0
 2238 0348 0DC0A0E1 		mov	ip, sp
 2239              	.LCFI8:
 2240              		.cfi_def_cfa_register 12
 2241 034c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2242 0350 04B04CE2 		sub	fp, ip, #4
 2243              		.cfi_offset 14, -8
 2244              		.cfi_offset 13, -12
 2245              		.cfi_offset 11, -16
 2246              	.LCFI9:
 2247              		.cfi_def_cfa 11, 4
 2248 0354 18D04DE2 		sub	sp, sp, #24
 2249 0358 20000BE5 		str	r0, [fp, #-32]
  83:../src/uart.c **** 	char buf[8 + 1]; //Los caracteres se generan comenzando por el menos significativo
  84:../src/uart.c **** 	char *p = buf + 8;	
 2250              		.loc 1 84 0
 2251 035c 1C304BE2 		sub	r3, fp, #28
 2252 0360 083083E2 		add	r3, r3, #8
 2253 0364 10300BE5 		str	r3, [fp, #-16]
  85:../src/uart.c **** 	uint8 c; // Almacena fin de cadena
  86:../src/uart.c **** 	*p = '\0';
 2254              		.loc 1 86 0
 2255 0368 10301BE5 		ldr	r3, [fp, #-16]
 2256 036c 0020A0E3 		mov	r2, #0
 2257 0370 0020C3E5 		strb	r2, [r3, #0]
 2258              	.L22:
  87:../src/uart.c **** 	do {
  88:../src/uart.c **** 		c = i & 0xf; // Resto de la división por 16
 2259              		.loc 1 88 0
 2260 0374 20301BE5 		ldr	r3, [fp, #-32]
 2261 0378 FF3003E2 		and	r3, r3, #255
 2262 037c 0F3003E2 		and	r3, r3, #15
 2263 0380 11304BE5 		strb	r3, [fp, #-17]
  89:../src/uart.c **** 		if( c < 10 )
 2264              		.loc 1 89 0
 2265 0384 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2266 0388 090053E3 		cmp	r3, #9
 2267 038c 0800008A 		bhi	.L20
  90:../src/uart.c **** 			*--p = '0' + c; // Almacenaje del carácter
 2268              		.loc 1 90 0
 2269 0390 10301BE5 		ldr	r3, [fp, #-16]
 2270 0394 013043E2 		sub	r3, r3, #1
 2271 0398 10300BE5 		str	r3, [fp, #-16]
 2272 039c 11305BE5 		ldrb	r3, [fp, #-17]
 2273 03a0 303083E2 		add	r3, r3, #48
 2274 03a4 FF2003E2 		and	r2, r3, #255
 2275 03a8 10301BE5 		ldr	r3, [fp, #-16]
 2276 03ac 0020C3E5 		strb	r2, [r3, #0]
 2277 03b0 070000EA 		b	.L21
 2278              	.L20:
  91:../src/uart.c **** 		else
  92:../src/uart.c **** 			*--p = 'a' + c - 10;
 2279              		.loc 1 92 0
 2280 03b4 10301BE5 		ldr	r3, [fp, #-16]
 2281 03b8 013043E2 		sub	r3, r3, #1
 2282 03bc 10300BE5 		str	r3, [fp, #-16]
 2283 03c0 11305BE5 		ldrb	r3, [fp, #-17]
 2284 03c4 573083E2 		add	r3, r3, #87
 2285 03c8 FF2003E2 		and	r2, r3, #255
 2286 03cc 10301BE5 		ldr	r3, [fp, #-16]
 2287 03d0 0020C3E5 		strb	r2, [r3, #0]
 2288              	.L21:
  93:../src/uart.c **** 			i = i >> 4; // División por 16
 2289              		.loc 1 93 0
 2290 03d4 20301BE5 		ldr	r3, [fp, #-32]
 2291 03d8 2332A0E1 		mov	r3, r3, lsr #4
 2292 03dc 20300BE5 		str	r3, [fp, #-32]
  94:../src/uart.c **** 	} while( i );
 2293              		.loc 1 94 0
 2294 03e0 20301BE5 		ldr	r3, [fp, #-32]
 2295 03e4 000053E3 		cmp	r3, #0
 2296 03e8 E1FFFF1A 		bne	.L22
  95:../src/uart.c **** 	uart0_puts( p ); // Envía la cadena
 2297              		.loc 1 95 0
 2298 03ec 10001BE5 		ldr	r0, [fp, #-16]
 2299 03f0 FEFFFFEB 		bl	uart0_puts
  96:../src/uart.c **** }
 2300              		.loc 1 96 0
 2301 03f4 0CD04BE2 		sub	sp, fp, #12
 2302 03f8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2303 03fc 1EFF2FE1 		bx	lr
 2304              		.cfi_endproc
 2305              	.LFE4:
 2307              		.align	2
 2308              		.global	uart0_getchar
 2310              	uart0_getchar:
 2311              	.LFB5:
  97:../src/uart.c **** 
  98:../src/uart.c **** /*
  99:../src/uart.c **** ** Devuelve un caracter recibido por la UART (espera hasta que llegue)
 100:../src/uart.c **** */
 101:../src/uart.c **** char uart0_getchar( void ){
 2312              		.loc 1 101 0
 2313              		.cfi_startproc
 2314              		@ Function supports interworking.
 2315              		@ args = 0, pretend = 0, frame = 0
 2316              		@ frame_needed = 1, uses_anonymous_args = 0
 2317 0400 0DC0A0E1 		mov	ip, sp
 2318              	.LCFI10:
 2319              		.cfi_def_cfa_register 12
 2320 0404 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2321 0408 04B04CE2 		sub	fp, ip, #4
 2322              		.cfi_offset 14, -8
 2323              		.cfi_offset 13, -12
 2324              		.cfi_offset 11, -16
 2325              	.LCFI11:
 2326              		.cfi_def_cfa 11, 4
 102:../src/uart.c **** 	while( (UFSTAT0 & 0xf) == 0 );
 2327              		.loc 1 102 0
 2328 040c 0000A0E1 		mov	r0, r0	@ nop
 2329              	.L24:
 2330              		.loc 1 102 0 is_stmt 0 discriminator 1
 2331 0410 28309FE5 		ldr	r3, .L25
 2332 0414 003093E5 		ldr	r3, [r3, #0]
 2333 0418 0F3003E2 		and	r3, r3, #15
 2334 041c 000053E3 		cmp	r3, #0
 2335 0420 FAFFFF0A 		beq	.L24
 103:../src/uart.c **** 	return URXH0;
 2336              		.loc 1 103 0 is_stmt 1
 2337 0424 18309FE5 		ldr	r3, .L25+4
 2338 0428 003093E5 		ldr	r3, [r3, #0]
 2339 042c FF3003E2 		and	r3, r3, #255
 104:../src/uart.c **** }
 2340              		.loc 1 104 0
 2341 0430 0300A0E1 		mov	r0, r3
 2342 0434 0CD04BE2 		sub	sp, fp, #12
 2343 0438 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2344 043c 1EFF2FE1 		bx	lr
 2345              	.L26:
 2346              		.align	2
 2347              	.L25:
 2348 0440 1800D001 		.word	30408728
 2349 0444 2400D001 		.word	30408740
 2350              		.cfi_endproc
 2351              	.LFE5:
 2353              		.align	2
 2354              		.global	uart0_gets
 2356              	uart0_gets:
 2357              	.LFB6:
 105:../src/uart.c **** 
 106:../src/uart.c **** /*
 107:../src/uart.c **** ** Forma una cadena con los caracteres recibidos por la UART hasta la recepción de '\n'
 108:../src/uart.c **** */
 109:../src/uart.c **** void uart0_gets( char *s ){
 2358              		.loc 1 109 0
 2359              		.cfi_startproc
 2360              		@ Function supports interworking.
 2361              		@ args = 0, pretend = 0, frame = 16
 2362              		@ frame_needed = 1, uses_anonymous_args = 0
 2363 0448 0DC0A0E1 		mov	ip, sp
 2364              	.LCFI12:
 2365              		.cfi_def_cfa_register 12
 2366 044c 10D82DE9 		stmfd	sp!, {r4, fp, ip, lr, pc}
 2367 0450 04B04CE2 		sub	fp, ip, #4
 2368              		.cfi_offset 14, -8
 2369              		.cfi_offset 13, -12
 2370              		.cfi_offset 11, -16
 2371              		.cfi_offset 4, -20
 2372              	.LCFI13:
 2373              		.cfi_def_cfa 11, 4
 2374 0454 14D04DE2 		sub	sp, sp, #20
 2375 0458 20000BE5 		str	r0, [fp, #-32]
 110:../src/uart.c **** 	uint8 i=0;
 2376              		.loc 1 110 0
 2377 045c 0030A0E3 		mov	r3, #0
 2378 0460 15304BE5 		strb	r3, [fp, #-21]
 111:../src/uart.c **** 	s[i] = uart0_getchar();
 2379              		.loc 1 111 0
 2380 0464 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2381 0468 20201BE5 		ldr	r2, [fp, #-32]
 2382 046c 034082E0 		add	r4, r2, r3
 2383 0470 FEFFFFEB 		bl	uart0_getchar
 2384 0474 0030A0E1 		mov	r3, r0
 2385 0478 0030C4E5 		strb	r3, [r4, #0]
 112:../src/uart.c **** 	while(s[i] != '\n') {
 2386              		.loc 1 112 0
 2387 047c 080000EA 		b	.L28
 2388              	.L29:
 113:../src/uart.c **** 		i++;
 2389              		.loc 1 113 0
 2390 0480 15305BE5 		ldrb	r3, [fp, #-21]
 2391 0484 013083E2 		add	r3, r3, #1
 2392 0488 15304BE5 		strb	r3, [fp, #-21]
 114:../src/uart.c **** 		s[i] = uart0_getchar();
 2393              		.loc 1 114 0
 2394 048c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2395 0490 20201BE5 		ldr	r2, [fp, #-32]
 2396 0494 034082E0 		add	r4, r2, r3
 2397 0498 FEFFFFEB 		bl	uart0_getchar
 2398 049c 0030A0E1 		mov	r3, r0
 2399 04a0 0030C4E5 		strb	r3, [r4, #0]
 2400              	.L28:
 112:../src/uart.c **** 	while(s[i] != '\n') {
 2401              		.loc 1 112 0 discriminator 1
 2402 04a4 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2403 04a8 20201BE5 		ldr	r2, [fp, #-32]
 2404 04ac 033082E0 		add	r3, r2, r3
 2405 04b0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2406 04b4 0A0053E3 		cmp	r3, #10
 2407 04b8 F0FFFF1A 		bne	.L29
 115:../src/uart.c **** 	}
 116:../src/uart.c **** 	s[i] = '\0';
 2408              		.loc 1 116 0
 2409 04bc 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2410 04c0 20201BE5 		ldr	r2, [fp, #-32]
 2411 04c4 033082E0 		add	r3, r2, r3
 2412 04c8 0020A0E3 		mov	r2, #0
 2413 04cc 0020C3E5 		strb	r2, [r3, #0]
 117:../src/uart.c **** }
 2414              		.loc 1 117 0
 2415 04d0 10D04BE2 		sub	sp, fp, #16
 2416 04d4 10689DE8 		ldmfd	sp, {r4, fp, sp, lr}
 2417 04d8 1EFF2FE1 		bx	lr
 2418              		.cfi_endproc
 2419              	.LFE6:
 2421              		.align	2
 2422              		.global	uart0_getint
 2424              	uart0_getint:
 2425              	.LFB7:
 118:../src/uart.c **** 
 119:../src/uart.c **** /*
 120:../src/uart.c **** ** Forma una cadena con los caracteres recibidos por la UART hasta la recepción de '\n' y los inter
 121:../src/uart.c **** */
 122:../src/uart.c **** int32 uart0_getint( void ){
 2426              		.loc 1 122 0
 2427              		.cfi_startproc
 2428              		@ Function supports interworking.
 2429              		@ args = 0, pretend = 0, frame = 16
 2430              		@ frame_needed = 1, uses_anonymous_args = 0
 2431 04dc 0DC0A0E1 		mov	ip, sp
 2432              	.LCFI14:
 2433              		.cfi_def_cfa_register 12
 2434 04e0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2435 04e4 04B04CE2 		sub	fp, ip, #4
 2436              		.cfi_offset 14, -8
 2437              		.cfi_offset 13, -12
 2438              		.cfi_offset 11, -16
 2439              	.LCFI15:
 2440              		.cfi_def_cfa 11, 4
 2441 04e8 10D04DE2 		sub	sp, sp, #16
 123:../src/uart.c **** 	int32 num=0, signo=1;
 2442              		.loc 1 123 0
 2443 04ec 0030A0E3 		mov	r3, #0
 2444 04f0 10300BE5 		str	r3, [fp, #-16]
 2445 04f4 0130A0E3 		mov	r3, #1
 2446 04f8 14300BE5 		str	r3, [fp, #-20]
 124:../src/uart.c **** 	uint8 c = uart0_getchar();
 2447              		.loc 1 124 0
 2448 04fc FEFFFFEB 		bl	uart0_getchar
 2449 0500 0030A0E1 		mov	r3, r0
 2450 0504 15304BE5 		strb	r3, [fp, #-21]
 125:../src/uart.c **** 	if(c == '-'){
 2451              		.loc 1 125 0
 2452 0508 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2453 050c 2D0053E3 		cmp	r3, #45
 2454 0510 1300001A 		bne	.L32
 126:../src/uart.c **** 		signo = -1;
 2455              		.loc 1 126 0
 2456 0514 0030E0E3 		mvn	r3, #0
 2457 0518 14300BE5 		str	r3, [fp, #-20]
 127:../src/uart.c **** 		c = uart0_getchar();
 2458              		.loc 1 127 0
 2459 051c FEFFFFEB 		bl	uart0_getchar
 2460 0520 0030A0E1 		mov	r3, r0
 2461 0524 15304BE5 		strb	r3, [fp, #-21]
 128:../src/uart.c **** 	}
 129:../src/uart.c **** 
 130:../src/uart.c **** 	while(c != '\n') {
 2462              		.loc 1 130 0
 2463 0528 0D0000EA 		b	.L32
 2464              	.L33:
 131:../src/uart.c **** 		num *= 10;
 2465              		.loc 1 131 0
 2466 052c 10201BE5 		ldr	r2, [fp, #-16]
 2467 0530 0230A0E1 		mov	r3, r2
 2468 0534 0331A0E1 		mov	r3, r3, asl #2
 2469 0538 023083E0 		add	r3, r3, r2
 2470 053c 8330A0E1 		mov	r3, r3, asl #1
 2471 0540 10300BE5 		str	r3, [fp, #-16]
 132:../src/uart.c **** 		num += c - 48;
 2472              		.loc 1 132 0
 2473 0544 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2474 0548 303043E2 		sub	r3, r3, #48
 2475 054c 10201BE5 		ldr	r2, [fp, #-16]
 2476 0550 033082E0 		add	r3, r2, r3
 2477 0554 10300BE5 		str	r3, [fp, #-16]
 133:../src/uart.c **** 		c = uart0_getchar();
 2478              		.loc 1 133 0
 2479 0558 FEFFFFEB 		bl	uart0_getchar
 2480 055c 0030A0E1 		mov	r3, r0
 2481 0560 15304BE5 		strb	r3, [fp, #-21]
 2482              	.L32:
 130:../src/uart.c **** 	while(c != '\n') {
 2483              		.loc 1 130 0 discriminator 1
 2484 0564 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2485 0568 0A0053E3 		cmp	r3, #10
 2486 056c EEFFFF1A 		bne	.L33
 134:../src/uart.c **** 	}
 135:../src/uart.c **** 	return num*signo;
 2487              		.loc 1 135 0
 2488 0570 10301BE5 		ldr	r3, [fp, #-16]
 2489 0574 14201BE5 		ldr	r2, [fp, #-20]
 2490 0578 920303E0 		mul	r3, r2, r3
 136:../src/uart.c **** 
 137:../src/uart.c **** }
 2491              		.loc 1 137 0
 2492 057c 0300A0E1 		mov	r0, r3
 2493 0580 0CD04BE2 		sub	sp, fp, #12
 2494 0584 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2495 0588 1EFF2FE1 		bx	lr
 2496              		.cfi_endproc
 2497              	.LFE7:
 2499              		.align	2
 2500              		.global	uart0_gethex
 2502              	uart0_gethex:
 2503              	.LFB8:
 138:../src/uart.c **** 
 139:../src/uart.c **** /*
 140:../src/uart.c **** ** Forma una cadena con los caracteres recibidos por la UART hasta la recepción de '\n' y los inter
 141:../src/uart.c **** */
 142:../src/uart.c **** uint32 uart0_gethex( void ){
 2504              		.loc 1 142 0
 2505              		.cfi_startproc
 2506              		@ Function supports interworking.
 2507              		@ args = 0, pretend = 0, frame = 8
 2508              		@ frame_needed = 1, uses_anonymous_args = 0
 2509 058c 0DC0A0E1 		mov	ip, sp
 2510              	.LCFI16:
 2511              		.cfi_def_cfa_register 12
 2512 0590 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2513 0594 04B04CE2 		sub	fp, ip, #4
 2514              		.cfi_offset 14, -8
 2515              		.cfi_offset 13, -12
 2516              		.cfi_offset 11, -16
 2517              	.LCFI17:
 2518              		.cfi_def_cfa 11, 4
 2519 0598 08D04DE2 		sub	sp, sp, #8
 143:../src/uart.c **** 	int32 num=0;
 2520              		.loc 1 143 0
 2521 059c 0030A0E3 		mov	r3, #0
 2522 05a0 10300BE5 		str	r3, [fp, #-16]
 144:../src/uart.c **** 	uint8 c;
 145:../src/uart.c **** 
 146:../src/uart.c **** 	c = uart0_getchar();
 2523              		.loc 1 146 0
 2524 05a4 FEFFFFEB 		bl	uart0_getchar
 2525 05a8 0030A0E1 		mov	r3, r0
 2526 05ac 11304BE5 		strb	r3, [fp, #-17]
 147:../src/uart.c **** 	while(c != '\n') {
 2527              		.loc 1 147 0
 2528 05b0 310000EA 		b	.L35
 2529              	.L39:
 148:../src/uart.c **** 
 149:../src/uart.c **** 		if(c >= '0' && c <= '9')
 2530              		.loc 1 149 0
 2531 05b4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2532 05b8 2F0053E3 		cmp	r3, #47
 2533 05bc 0800009A 		bls	.L36
 2534              		.loc 1 149 0 is_stmt 0 discriminator 1
 2535 05c0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2536 05c4 390053E3 		cmp	r3, #57
 2537 05c8 0500008A 		bhi	.L36
 150:../src/uart.c **** 			num += c - '0';
 2538              		.loc 1 150 0 is_stmt 1
 2539 05cc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2540 05d0 303043E2 		sub	r3, r3, #48
 2541 05d4 10201BE5 		ldr	r2, [fp, #-16]
 2542 05d8 033082E0 		add	r3, r2, r3
 2543 05dc 10300BE5 		str	r3, [fp, #-16]
 2544 05e0 160000EA 		b	.L37
 2545              	.L36:
 151:../src/uart.c **** 		else if(c >= 'A' && c <= 'F')
 2546              		.loc 1 151 0
 2547 05e4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2548 05e8 400053E3 		cmp	r3, #64
 2549 05ec 0800009A 		bls	.L38
 2550              		.loc 1 151 0 is_stmt 0 discriminator 1
 2551 05f0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2552 05f4 460053E3 		cmp	r3, #70
 2553 05f8 0500008A 		bhi	.L38
 152:../src/uart.c **** 			num += c - 55;
 2554              		.loc 1 152 0 is_stmt 1
 2555 05fc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2556 0600 373043E2 		sub	r3, r3, #55
 2557 0604 10201BE5 		ldr	r2, [fp, #-16]
 2558 0608 033082E0 		add	r3, r2, r3
 2559 060c 10300BE5 		str	r3, [fp, #-16]
 2560 0610 0A0000EA 		b	.L37
 2561              	.L38:
 153:../src/uart.c **** 		else if(c >= 'a' && c <= 'f')
 2562              		.loc 1 153 0
 2563 0614 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2564 0618 600053E3 		cmp	r3, #96
 2565 061c 0700009A 		bls	.L37
 2566              		.loc 1 153 0 is_stmt 0 discriminator 1
 2567 0620 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2568 0624 660053E3 		cmp	r3, #102
 2569 0628 0400008A 		bhi	.L37
 154:../src/uart.c **** 				num += c - 87;
 2570              		.loc 1 154 0 is_stmt 1
 2571 062c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2572 0630 573043E2 		sub	r3, r3, #87
 2573 0634 10201BE5 		ldr	r2, [fp, #-16]
 2574 0638 033082E0 		add	r3, r2, r3
 2575 063c 10300BE5 		str	r3, [fp, #-16]
 2576              	.L37:
 155:../src/uart.c **** 		num *= 16;
 2577              		.loc 1 155 0
 2578 0640 10301BE5 		ldr	r3, [fp, #-16]
 2579 0644 0332A0E1 		mov	r3, r3, asl #4
 2580 0648 10300BE5 		str	r3, [fp, #-16]
 156:../src/uart.c **** 		c = uart0_getchar();
 2581              		.loc 1 156 0
 2582 064c FEFFFFEB 		bl	uart0_getchar
 2583 0650 0030A0E1 		mov	r3, r0
 2584 0654 11304BE5 		strb	r3, [fp, #-17]
 157:../src/uart.c **** 		if(c == '\n')
 2585              		.loc 1 157 0
 2586 0658 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2587 065c 0A0053E3 		cmp	r3, #10
 2588 0660 0500001A 		bne	.L35
 158:../src/uart.c **** 			num /= 16;
 2589              		.loc 1 158 0
 2590 0664 10301BE5 		ldr	r3, [fp, #-16]
 2591 0668 0F2083E2 		add	r2, r3, #15
 2592 066c 000053E3 		cmp	r3, #0
 2593 0670 0230A0B1 		movlt	r3, r2
 2594 0674 4332A0E1 		mov	r3, r3, asr #4
 2595 0678 10300BE5 		str	r3, [fp, #-16]
 2596              	.L35:
 147:../src/uart.c **** 	while(c != '\n') {
 2597              		.loc 1 147 0 discriminator 1
 2598 067c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2599 0680 0A0053E3 		cmp	r3, #10
 2600 0684 CAFFFF1A 		bne	.L39
 159:../src/uart.c **** 	}
 160:../src/uart.c **** 	return num;
 2601              		.loc 1 160 0
 2602 0688 10301BE5 		ldr	r3, [fp, #-16]
 161:../src/uart.c **** }
 2603              		.loc 1 161 0
 2604 068c 0300A0E1 		mov	r0, r3
 2605 0690 0CD04BE2 		sub	sp, fp, #12
 2606 0694 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2607 0698 1EFF2FE1 		bx	lr
 2608              		.cfi_endproc
 2609              	.LFE8:
 2611              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:1882   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:1885   .text:00000000 uart0_init
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:1955   .text:000000b0 $d
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:1962   .text:000000c0 $a
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:1965   .text:000000c0 uart0_putchar
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2007   .text:00000110 $d
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2012   .text:00000118 $a
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2015   .text:00000118 uart0_puts
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2069   .text:00000180 uart0_putint
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2224   .text:00000344 $d
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2228   .text:00000348 $a
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2231   .text:00000348 uart0_puthex
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2310   .text:00000400 uart0_getchar
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2348   .text:00000440 $d
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2353   .text:00000448 $a
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2356   .text:00000448 uart0_gets
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2424   .text:000004dc uart0_getint
C:\Users\USUARI~1\AppData\Local\Temp\cccLTGZu.s:2502   .text:0000058c uart0_gethex
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
