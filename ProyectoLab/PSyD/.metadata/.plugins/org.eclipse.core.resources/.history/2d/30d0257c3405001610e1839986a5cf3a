/*-------------------------------------------------------------------
**
**  Fichero:
**    rtc.h  29/4/2015
**
**    (c) J.M. Mendias
**    Programación de Sistemas y Dispositivos
**    Facultad de Informática. Universidad Complutense de Madrid
**
**  Propósito:
**    Contiene las implemetaciones de las funciones
**    para la gestión básica del Real Time Clock del chip S3C44BOX
**
**  Notas de diseño:
**
**-----------------------------------------------------------------*/


/*
** Configura el RTC desactivando alarma, round reset y generación de ticks
** Inicializa el RTC a las 00:00:00 horas del martes 1 de enero de 2013
** Inicializa a 0 los registros de alarma 
*/
void rtc_init( void ) {

	TICNT = 0x0;
	RTCALM = 0x0;
	RTCRST = 0x0;
	RTCCON = 0x1; // Debe habilitar la posibilidad de leer/escribir los registros de hora/fecha del RTC
	BCDYEAR = 0x2016; // 2016
	BCDMON = 0x1; // Enero
	BCDDAY = 0x6; // El dia Jueves es fue 1 de enero (Domingo es el dia 1º de la semana)
	BCDDATE = 0x1; // Dia 1
	BCDHOUR = 0x0; // Hora 00
	BCDMIN = 0x0; // Minuto 00
	BCDSEC = 0x0; // Segundo 00
	ALMYEAR = 0x0;
	ALMMON = 0x0;
	ALMDAY = 0x0;
	ALMHOUR = 0x0;
	ALMMIN = 0x0;
	ALMSEC = 0x0;
	RTCCON &= 0x0; // Deshabilita la posibilidad de leer/escribir los registros de hora/fecha del RTC

}

/*
** Actualiza la fecha y hora mantenida por el RTC 
*/
void rtc_puttime( rtc_time_t *rtc_time ) {

	RTCCON |= 0x1; // Habilita la posibilidad de leer/escribir los registros de hora/fecha del RTC
	BCDYEAR	

}

/* 
** Recupera en la fecha y hora mantenida por el RTC
*/
void rtc_gettime( rtc_time_t *rtc_time ) {

}

/* 
** Instala, en la tabla de vectores de interrupción, la función isr como RTI de interrupciones por ticks del RTC
** Borra interrupciones pendientes por ticks del RTC
** Desenmascara globalmente las interrupciones y específicamente las interrupciones por ticks del RTC
** Habilita la generación de ticks y fija el valor inicial del contador que los genera: perido = (tick_count+1)/128 segundos
*/
void rtc_open( void (*isr)(void), uint8 tick_count ) {

}

/* 
** Deshabilita la generación de ticks
** Enmascara las interrupciones por ticks del RTC
** Desinstala la RTI por ticks del RTC 
*/
void rtc_close( void ) {

}
