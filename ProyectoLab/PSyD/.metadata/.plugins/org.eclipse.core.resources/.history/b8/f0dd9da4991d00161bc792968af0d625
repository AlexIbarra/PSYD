   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"uart.c"
  21              	.Ltext0:
  22              		.file 1 "../src/uart.c"
 1882              		.align	2
 1883              		.global	uart0_init
 1885              	uart0_init:
 1886              	.LFB0:
   1:../src/uart.c **** /*
   2:../src/uart.c ****  * uart.c
   3:../src/uart.c ****  *
   4:../src/uart.c ****  *  Created on: 05/04/2016
   5:../src/uart.c ****  *      Author: usuario_local
   6:../src/uart.c ****  */
   7:../src/uart.c **** 
   8:../src/uart.c **** #include <uart.h>
   9:../src/uart.c **** #include <s3c44b0x.h>
  10:../src/uart.c **** #include <s3cev40.h>
  11:../src/uart.c **** 
  12:../src/uart.c **** /*
  13:../src/uart.c **** ** Configura la UART para una comunicaci�n seg�n los siguientes par�metros:
  14:../src/uart.c **** **   E/S programada (por pooling)
  15:../src/uart.c **** **   Control manual de flujo
  16:../src/uart.c **** **   FIFOs: activadas
  17:../src/uart.c **** **   Protocolo: normal, sin paridad, 1 bit de stop, 8 bits de datos
  18:../src/uart.c **** **   Velocidad: 115200 baudios
  19:../src/uart.c **** **   Sin tratamiento de errores
  20:../src/uart.c **** */
  21:../src/uart.c **** void uart0_init( void ){
 1887              		.loc 1 21 0
 1888              		.cfi_startproc
 1889              		@ Function supports interworking.
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 1, uses_anonymous_args = 0
 1892 0000 0DC0A0E1 		mov	ip, sp
 1893              	.LCFI0:
 1894              		.cfi_def_cfa_register 12
 1895 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1896 0008 04B04CE2 		sub	fp, ip, #4
 1897              		.cfi_offset 14, -8
 1898              		.cfi_offset 13, -12
 1899              		.cfi_offset 11, -16
 1900              	.LCFI1:
 1901              		.cfi_def_cfa 11, 4
  22:../src/uart.c **** 	ULCON0 &= ~(1<<6) & ~(1<<5) & ~(1<<4) & ~(1<<3) & ~(1<<2);
 1902              		.loc 1 22 0
 1903 000c 1D36A0E3 		mov	r3, #30408704
 1904 0010 1D26A0E3 		mov	r2, #30408704
 1905 0014 002092E5 		ldr	r2, [r2, #0]
 1906 0018 7C20C2E3 		bic	r2, r2, #124
 1907 001c 002083E5 		str	r2, [r3, #0]
  23:../src/uart.c **** 	ULCON0 |= 3;
 1908              		.loc 1 23 0
 1909 0020 1D36A0E3 		mov	r3, #30408704
 1910 0024 1D26A0E3 		mov	r2, #30408704
 1911 0028 002092E5 		ldr	r2, [r2, #0]
 1912 002c 032082E3 		orr	r2, r2, #3
 1913 0030 002083E5 		str	r2, [r3, #0]
  24:../src/uart.c **** 	UBRDIV0 = 34;
 1914              		.loc 1 24 0
 1915 0034 74309FE5 		ldr	r3, .L2
 1916 0038 2220A0E3 		mov	r2, #34
 1917 003c 002083E5 		str	r2, [r3, #0]
  25:../src/uart.c **** 	UMCON0 &= ~(1<<4);
 1918              		.loc 1 25 0
 1919 0040 6C309FE5 		ldr	r3, .L2+4
 1920 0044 68209FE5 		ldr	r2, .L2+4
 1921 0048 002092E5 		ldr	r2, [r2, #0]
 1922 004c 1020C2E3 		bic	r2, r2, #16
 1923 0050 002083E5 		str	r2, [r3, #0]
  26:../src/uart.c **** 	UCON0 |= (1<<2) | (1<<0);
 1924              		.loc 1 26 0
 1925 0054 5C309FE5 		ldr	r3, .L2+8
 1926 0058 58209FE5 		ldr	r2, .L2+8
 1927 005c 002092E5 		ldr	r2, [r2, #0]
 1928 0060 052082E3 		orr	r2, r2, #5
 1929 0064 002083E5 		str	r2, [r3, #0]
  27:../src/uart.c **** 	UCON0 &= ~(1<<7) & ~(1<<6) & ~(1<<5) & ~(1<<4);
 1930              		.loc 1 27 0
 1931 0068 48309FE5 		ldr	r3, .L2+8
 1932 006c 44209FE5 		ldr	r2, .L2+8
 1933 0070 002092E5 		ldr	r2, [r2, #0]
 1934 0074 F020C2E3 		bic	r2, r2, #240
 1935 0078 002083E5 		str	r2, [r3, #0]
  28:../src/uart.c **** 	UFCON0 |= (1<<0);
 1936              		.loc 1 28 0
 1937 007c 38309FE5 		ldr	r3, .L2+12
 1938 0080 34209FE5 		ldr	r2, .L2+12
 1939 0084 002092E5 		ldr	r2, [r2, #0]
 1940 0088 012082E3 		orr	r2, r2, #1
 1941 008c 002083E5 		str	r2, [r3, #0]
  29:../src/uart.c **** 	UFCON0 &= ~(1<<2) & ~(1<<1);
 1942              		.loc 1 29 0
 1943 0090 24309FE5 		ldr	r3, .L2+12
 1944 0094 20209FE5 		ldr	r2, .L2+12
 1945 0098 002092E5 		ldr	r2, [r2, #0]
 1946 009c 0620C2E3 		bic	r2, r2, #6
 1947 00a0 002083E5 		str	r2, [r3, #0]
  30:../src/uart.c **** }
 1948              		.loc 1 30 0
 1949 00a4 0CD04BE2 		sub	sp, fp, #12
 1950 00a8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1951 00ac 1EFF2FE1 		bx	lr
 1952              	.L3:
 1953              		.align	2
 1954              	.L2:
 1955 00b0 2800D001 		.word	30408744
 1956 00b4 0C00D001 		.word	30408716
 1957 00b8 0400D001 		.word	30408708
 1958 00bc 0800D001 		.word	30408712
 1959              		.cfi_endproc
 1960              	.LFE0:
 1962              		.align	2
 1963              		.global	uart0_putchar
 1965              	uart0_putchar:
 1966              	.LFB1:
  31:../src/uart.c **** 
  32:../src/uart.c **** /*
  33:../src/uart.c **** ** Env�a un caracter por la UART
  34:../src/uart.c **** */
  35:../src/uart.c **** void uart0_putchar( char ch ){
 1967              		.loc 1 35 0
 1968              		.cfi_startproc
 1969              		@ Function supports interworking.
 1970              		@ args = 0, pretend = 0, frame = 8
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 00c0 0DC0A0E1 		mov	ip, sp
 1973              	.LCFI2:
 1974              		.cfi_def_cfa_register 12
 1975 00c4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1976 00c8 04B04CE2 		sub	fp, ip, #4
 1977              		.cfi_offset 14, -8
 1978              		.cfi_offset 13, -12
 1979              		.cfi_offset 11, -16
 1980              	.LCFI3:
 1981              		.cfi_def_cfa 11, 4
 1982 00cc 08D04DE2 		sub	sp, sp, #8
 1983 00d0 0030A0E1 		mov	r3, r0
 1984 00d4 0D304BE5 		strb	r3, [fp, #-13]
  36:../src/uart.c **** 	while(((UFSTAT0 >> 9) & 1) == 1);
 1985              		.loc 1 36 0
 1986 00d8 0000A0E1 		mov	r0, r0	@ nop
 1987              	.L5:
 1988              		.loc 1 36 0 is_stmt 0 discriminator 1
 1989 00dc 2C309FE5 		ldr	r3, .L6
 1990 00e0 003093E5 		ldr	r3, [r3, #0]
 1991 00e4 A334A0E1 		mov	r3, r3, lsr #9
 1992 00e8 013003E2 		and	r3, r3, #1
 1993 00ec FF3003E2 		and	r3, r3, #255
 1994 00f0 000053E3 		cmp	r3, #0
 1995 00f4 F8FFFF1A 		bne	.L5
  37:../src/uart.c **** 	UTXH0 = ch;
 1996              		.loc 1 37 0 is_stmt 1
 1997 00f8 14309FE5 		ldr	r3, .L6+4
 1998 00fc 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1999 0100 002083E5 		str	r2, [r3, #0]
  38:../src/uart.c **** }
 2000              		.loc 1 38 0
 2001 0104 0CD04BE2 		sub	sp, fp, #12
 2002 0108 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2003 010c 1EFF2FE1 		bx	lr
 2004              	.L7:
 2005              		.align	2
 2006              	.L6:
 2007 0110 1800D001 		.word	30408728
 2008 0114 2000D001 		.word	30408736
 2009              		.cfi_endproc
 2010              	.LFE1:
 2012              		.align	2
 2013              		.global	uart0_puts
 2015              	uart0_puts:
 2016              	.LFB2:
  39:../src/uart.c **** 
  40:../src/uart.c **** /*
  41:../src/uart.c **** ** Env�a una cadena de caracteres por la UART
  42:../src/uart.c **** */
  43:../src/uart.c **** void uart0_puts( char *s ){
 2017              		.loc 1 43 0
 2018              		.cfi_startproc
 2019              		@ Function supports interworking.
 2020              		@ args = 0, pretend = 0, frame = 16
 2021              		@ frame_needed = 1, uses_anonymous_args = 0
 2022 0118 0DC0A0E1 		mov	ip, sp
 2023              	.LCFI4:
 2024              		.cfi_def_cfa_register 12
 2025 011c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2026 0120 04B04CE2 		sub	fp, ip, #4
 2027              		.cfi_offset 14, -8
 2028              		.cfi_offset 13, -12
 2029              		.cfi_offset 11, -16
 2030              	.LCFI5:
 2031              		.cfi_def_cfa 11, 4
 2032 0124 10D04DE2 		sub	sp, sp, #16
 2033 0128 18000BE5 		str	r0, [fp, #-24]
  44:../src/uart.c **** 	int i=0;
 2034              		.loc 1 44 0
 2035 012c 0030A0E3 		mov	r3, #0
 2036 0130 10300BE5 		str	r3, [fp, #-16]
  45:../src/uart.c **** 	while(s[i] != '\0'){
 2037              		.loc 1 45 0
 2038 0134 080000EA 		b	.L9
 2039              	.L10:
  46:../src/uart.c **** 		uart0_putchar(s[i]);
 2040              		.loc 1 46 0
 2041 0138 10301BE5 		ldr	r3, [fp, #-16]
 2042 013c 18201BE5 		ldr	r2, [fp, #-24]
 2043 0140 033082E0 		add	r3, r2, r3
 2044 0144 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2045 0148 0300A0E1 		mov	r0, r3
 2046 014c FEFFFFEB 		bl	uart0_putchar
  47:../src/uart.c **** 		i++;
 2047              		.loc 1 47 0
 2048 0150 10301BE5 		ldr	r3, [fp, #-16]
 2049 0154 013083E2 		add	r3, r3, #1
 2050 0158 10300BE5 		str	r3, [fp, #-16]
 2051              	.L9:
  45:../src/uart.c **** 	while(s[i] != '\0'){
 2052              		.loc 1 45 0 discriminator 1
 2053 015c 10301BE5 		ldr	r3, [fp, #-16]
 2054 0160 18201BE5 		ldr	r2, [fp, #-24]
 2055 0164 033082E0 		add	r3, r2, r3
 2056 0168 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2057 016c 000053E3 		cmp	r3, #0
 2058 0170 F0FFFF1A 		bne	.L10
  48:../src/uart.c **** 	}
  49:../src/uart.c **** }
 2059              		.loc 1 49 0
 2060 0174 0CD04BE2 		sub	sp, fp, #12
 2061 0178 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2062 017c 1EFF2FE1 		bx	lr
 2063              		.cfi_endproc
 2064              	.LFE2:
 2066              		.align	2
 2067              		.global	uart0_putint
 2069              	uart0_putint:
 2070              	.LFB3:
  50:../src/uart.c **** 
  51:../src/uart.c **** /*
  52:../src/uart.c **** ** Env�a una cadena de caracteres por la UART que representa en decimal al entero que toma como a
  53:../src/uart.c **** */
  54:../src/uart.c **** void uart0_putint( int32 i ){
 2071              		.loc 1 54 0
 2072              		.cfi_startproc
 2073              		@ Function supports interworking.
 2074              		@ args = 0, pretend = 0, frame = 64
 2075              		@ frame_needed = 1, uses_anonymous_args = 0
 2076 0180 0DC0A0E1 		mov	ip, sp
 2077              	.LCFI6:
 2078              		.cfi_def_cfa_register 12
 2079 0184 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2080 0188 04B04CE2 		sub	fp, ip, #4
 2081              		.cfi_offset 14, -8
 2082              		.cfi_offset 13, -12
 2083              		.cfi_offset 11, -16
 2084              	.LCFI7:
 2085              		.cfi_def_cfa 11, 4
 2086 018c 40D04DE2 		sub	sp, sp, #64
 2087 0190 48000BE5 		str	r0, [fp, #-72]
  55:../src/uart.c **** 	int32 num=i, tam=0, numero[11], j=0;
 2088              		.loc 1 55 0
 2089 0194 48301BE5 		ldr	r3, [fp, #-72]
 2090 0198 10300BE5 		str	r3, [fp, #-16]
 2091 019c 0030A0E3 		mov	r3, #0
 2092 01a0 14300BE5 		str	r3, [fp, #-20]
 2093 01a4 0030A0E3 		mov	r3, #0
 2094 01a8 18300BE5 		str	r3, [fp, #-24]
  56:../src/uart.c **** 
  57:../src/uart.c **** 	if(num<0){
 2095              		.loc 1 57 0
 2096 01ac 10301BE5 		ldr	r3, [fp, #-16]
 2097 01b0 000053E3 		cmp	r3, #0
 2098 01b4 040000AA 		bge	.L12
  58:../src/uart.c **** 		uart0_putchar('-');
 2099              		.loc 1 58 0
 2100 01b8 2D00A0E3 		mov	r0, #45
 2101 01bc FEFFFFEB 		bl	uart0_putchar
  59:../src/uart.c **** 		num*=-1;
 2102              		.loc 1 59 0
 2103 01c0 10301BE5 		ldr	r3, [fp, #-16]
 2104 01c4 003063E2 		rsb	r3, r3, #0
 2105 01c8 10300BE5 		str	r3, [fp, #-16]
 2106              	.L12:
  60:../src/uart.c **** 	}
  61:../src/uart.c **** 
  62:../src/uart.c **** 	numero[j]=num%10;
 2107              		.loc 1 62 0
 2108 01cc 10101BE5 		ldr	r1, [fp, #-16]
 2109 01d0 54319FE5 		ldr	r3, .L17
 2110 01d4 9103C3E0 		smull	r0, r3, r1, r3
 2111 01d8 4321A0E1 		mov	r2, r3, asr #2
 2112 01dc C13FA0E1 		mov	r3, r1, asr #31
 2113 01e0 022063E0 		rsb	r2, r3, r2
 2114 01e4 0230A0E1 		mov	r3, r2
 2115 01e8 0331A0E1 		mov	r3, r3, asl #2
 2116 01ec 023083E0 		add	r3, r3, r2
 2117 01f0 8330A0E1 		mov	r3, r3, asl #1
 2118 01f4 012063E0 		rsb	r2, r3, r1
 2119 01f8 18101BE5 		ldr	r1, [fp, #-24]
 2120 01fc 3730E0E3 		mvn	r3, #55
 2121 0200 0111A0E1 		mov	r1, r1, asl #2
 2122 0204 0C004BE2 		sub	r0, fp, #12
 2123 0208 011080E0 		add	r1, r0, r1
 2124 020c 033081E0 		add	r3, r1, r3
 2125 0210 002083E5 		str	r2, [r3, #0]
  63:../src/uart.c **** 	num/=10;
 2126              		.loc 1 63 0
 2127 0214 10301BE5 		ldr	r3, [fp, #-16]
 2128 0218 0C219FE5 		ldr	r2, .L17
 2129 021c 9312C2E0 		smull	r1, r2, r3, r2
 2130 0220 4221A0E1 		mov	r2, r2, asr #2
 2131 0224 C33FA0E1 		mov	r3, r3, asr #31
 2132 0228 023063E0 		rsb	r3, r3, r2
 2133 022c 10300BE5 		str	r3, [fp, #-16]
  64:../src/uart.c **** 	tam++;
 2134              		.loc 1 64 0
 2135 0230 14301BE5 		ldr	r3, [fp, #-20]
 2136 0234 013083E2 		add	r3, r3, #1
 2137 0238 14300BE5 		str	r3, [fp, #-20]
  65:../src/uart.c **** 
  66:../src/uart.c **** 	while(num > 0){
 2138              		.loc 1 66 0
 2139 023c 1E0000EA 		b	.L13
 2140              	.L14:
  67:../src/uart.c **** 		j++;
 2141              		.loc 1 67 0
 2142 0240 18301BE5 		ldr	r3, [fp, #-24]
 2143 0244 013083E2 		add	r3, r3, #1
 2144 0248 18300BE5 		str	r3, [fp, #-24]
  68:../src/uart.c **** 		numero[j]=num%10;
 2145              		.loc 1 68 0
 2146 024c 10101BE5 		ldr	r1, [fp, #-16]
 2147 0250 D4309FE5 		ldr	r3, .L17
 2148 0254 9123C3E0 		smull	r2, r3, r1, r3
 2149 0258 4321A0E1 		mov	r2, r3, asr #2
 2150 025c C13FA0E1 		mov	r3, r1, asr #31
 2151 0260 022063E0 		rsb	r2, r3, r2
 2152 0264 0230A0E1 		mov	r3, r2
 2153 0268 0331A0E1 		mov	r3, r3, asl #2
 2154 026c 023083E0 		add	r3, r3, r2
 2155 0270 8330A0E1 		mov	r3, r3, asl #1
 2156 0274 012063E0 		rsb	r2, r3, r1
 2157 0278 18101BE5 		ldr	r1, [fp, #-24]
 2158 027c 3730E0E3 		mvn	r3, #55
 2159 0280 0111A0E1 		mov	r1, r1, asl #2
 2160 0284 0C004BE2 		sub	r0, fp, #12
 2161 0288 011080E0 		add	r1, r0, r1
 2162 028c 033081E0 		add	r3, r1, r3
 2163 0290 002083E5 		str	r2, [r3, #0]
  69:../src/uart.c **** 		num/=10;
 2164              		.loc 1 69 0
 2165 0294 10301BE5 		ldr	r3, [fp, #-16]
 2166 0298 8C209FE5 		ldr	r2, .L17
 2167 029c 9312C2E0 		smull	r1, r2, r3, r2
 2168 02a0 4221A0E1 		mov	r2, r2, asr #2
 2169 02a4 C33FA0E1 		mov	r3, r3, asr #31
 2170 02a8 023063E0 		rsb	r3, r3, r2
 2171 02ac 10300BE5 		str	r3, [fp, #-16]
  70:../src/uart.c **** 		tam++;
 2172              		.loc 1 70 0
 2173 02b0 14301BE5 		ldr	r3, [fp, #-20]
 2174 02b4 013083E2 		add	r3, r3, #1
 2175 02b8 14300BE5 		str	r3, [fp, #-20]
 2176              	.L13:
  66:../src/uart.c **** 	while(num > 0){
 2177              		.loc 1 66 0 discriminator 1
 2178 02bc 10301BE5 		ldr	r3, [fp, #-16]
 2179 02c0 000053E3 		cmp	r3, #0
 2180 02c4 DDFFFFCA 		bgt	.L14
  71:../src/uart.c **** 	}
  72:../src/uart.c **** 
  73:../src/uart.c **** 	for(j=tam-1; j>=0; j--)
 2181              		.loc 1 73 0
 2182 02c8 14301BE5 		ldr	r3, [fp, #-20]
 2183 02cc 013043E2 		sub	r3, r3, #1
 2184 02d0 18300BE5 		str	r3, [fp, #-24]
 2185 02d4 0E0000EA 		b	.L15
 2186              	.L16:
  74:../src/uart.c **** 		uart0_putchar(numero[j]+48);
 2187              		.loc 1 74 0 discriminator 2
 2188 02d8 18201BE5 		ldr	r2, [fp, #-24]
 2189 02dc 3730E0E3 		mvn	r3, #55
 2190 02e0 0221A0E1 		mov	r2, r2, asl #2
 2191 02e4 0C004BE2 		sub	r0, fp, #12
 2192 02e8 022080E0 		add	r2, r0, r2
 2193 02ec 033082E0 		add	r3, r2, r3
 2194 02f0 003093E5 		ldr	r3, [r3, #0]
 2195 02f4 FF3003E2 		and	r3, r3, #255
 2196 02f8 303083E2 		add	r3, r3, #48
 2197 02fc FF3003E2 		and	r3, r3, #255
 2198 0300 0300A0E1 		mov	r0, r3
 2199 0304 FEFFFFEB 		bl	uart0_putchar
  73:../src/uart.c **** 	for(j=tam-1; j>=0; j--)
 2200              		.loc 1 73 0 discriminator 2
 2201 0308 18301BE5 		ldr	r3, [fp, #-24]
 2202 030c 013043E2 		sub	r3, r3, #1
 2203 0310 18300BE5 		str	r3, [fp, #-24]
 2204              	.L15:
  73:../src/uart.c **** 	for(j=tam-1; j>=0; j--)
 2205              		.loc 1 73 0 is_stmt 0 discriminator 1
 2206 0314 18301BE5 		ldr	r3, [fp, #-24]
 2207 0318 000053E3 		cmp	r3, #0
 2208 031c EDFFFFAA 		bge	.L16
  75:../src/uart.c **** }
 2209              		.loc 1 75 0 is_stmt 1
 2210 0320 0CD04BE2 		sub	sp, fp, #12
 2211 0324 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2212 0328 1EFF2FE1 		bx	lr
 2213              	.L18:
 2214              		.align	2
 2215              	.L17:
 2216 032c 67666666 		.word	1717986919
 2217              		.cfi_endproc
 2218              	.LFE3:
 2220              		.align	2
 2221              		.global	uart0_puthex
 2223              	uart0_puthex:
 2224              	.LFB4:
  76:../src/uart.c **** 
  77:../src/uart.c **** /*
  78:../src/uart.c **** ** Env�a una cadena de caracteres por la UART que representa en hexadecimal al entero que toma co
  79:../src/uart.c **** */
  80:../src/uart.c **** void uart0_puthex( uint32 i ){
 2225              		.loc 1 80 0
 2226              		.cfi_startproc
 2227              		@ Function supports interworking.
 2228              		@ args = 0, pretend = 0, frame = 24
 2229              		@ frame_needed = 1, uses_anonymous_args = 0
 2230 0330 0DC0A0E1 		mov	ip, sp
 2231              	.LCFI8:
 2232              		.cfi_def_cfa_register 12
 2233 0334 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2234 0338 04B04CE2 		sub	fp, ip, #4
 2235              		.cfi_offset 14, -8
 2236              		.cfi_offset 13, -12
 2237              		.cfi_offset 11, -16
 2238              	.LCFI9:
 2239              		.cfi_def_cfa 11, 4
 2240 033c 18D04DE2 		sub	sp, sp, #24
 2241 0340 20000BE5 		str	r0, [fp, #-32]
  81:../src/uart.c **** 	char buf[8 + 1]; //Los caracteres se generan comenzando por el menos significativo
  82:../src/uart.c **** 	char *p = buf + 8;	
 2242              		.loc 1 82 0
 2243 0344 1C304BE2 		sub	r3, fp, #28
 2244 0348 083083E2 		add	r3, r3, #8
 2245 034c 10300BE5 		str	r3, [fp, #-16]
  83:../src/uart.c **** 	uint8 c; // Almacena fin de cadena
  84:../src/uart.c **** 	*p = '\0';
 2246              		.loc 1 84 0
 2247 0350 10301BE5 		ldr	r3, [fp, #-16]
 2248 0354 0020A0E3 		mov	r2, #0
 2249 0358 0020C3E5 		strb	r2, [r3, #0]
 2250              	.L22:
  85:../src/uart.c **** 	do {
  86:../src/uart.c **** 		c = i & 0xf; // Resto de la divisi�n por 16
 2251              		.loc 1 86 0
 2252 035c 20301BE5 		ldr	r3, [fp, #-32]
 2253 0360 FF3003E2 		and	r3, r3, #255
 2254 0364 0F3003E2 		and	r3, r3, #15
 2255 0368 11304BE5 		strb	r3, [fp, #-17]
  87:../src/uart.c **** 		if( c < 10 )
 2256              		.loc 1 87 0
 2257 036c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2258 0370 090053E3 		cmp	r3, #9
 2259 0374 0800008A 		bhi	.L20
  88:../src/uart.c **** 			*--p = '0' + c; // Almacenaje del car�cter
 2260              		.loc 1 88 0
 2261 0378 10301BE5 		ldr	r3, [fp, #-16]
 2262 037c 013043E2 		sub	r3, r3, #1
 2263 0380 10300BE5 		str	r3, [fp, #-16]
 2264 0384 11305BE5 		ldrb	r3, [fp, #-17]
 2265 0388 303083E2 		add	r3, r3, #48
 2266 038c FF2003E2 		and	r2, r3, #255
 2267 0390 10301BE5 		ldr	r3, [fp, #-16]
 2268 0394 0020C3E5 		strb	r2, [r3, #0]
 2269 0398 070000EA 		b	.L21
 2270              	.L20:
  89:../src/uart.c **** 		else
  90:../src/uart.c **** 			*--p = 'a' + c - 10;
 2271              		.loc 1 90 0
 2272 039c 10301BE5 		ldr	r3, [fp, #-16]
 2273 03a0 013043E2 		sub	r3, r3, #1
 2274 03a4 10300BE5 		str	r3, [fp, #-16]
 2275 03a8 11305BE5 		ldrb	r3, [fp, #-17]
 2276 03ac 573083E2 		add	r3, r3, #87
 2277 03b0 FF2003E2 		and	r2, r3, #255
 2278 03b4 10301BE5 		ldr	r3, [fp, #-16]
 2279 03b8 0020C3E5 		strb	r2, [r3, #0]
 2280              	.L21:
  91:../src/uart.c **** 			i = i >> 4; // Divisi�n por 16
 2281              		.loc 1 91 0
 2282 03bc 20301BE5 		ldr	r3, [fp, #-32]
 2283 03c0 2332A0E1 		mov	r3, r3, lsr #4
 2284 03c4 20300BE5 		str	r3, [fp, #-32]
  92:../src/uart.c **** 	} while( i );
 2285              		.loc 1 92 0
 2286 03c8 20301BE5 		ldr	r3, [fp, #-32]
 2287 03cc 000053E3 		cmp	r3, #0
 2288 03d0 E1FFFF1A 		bne	.L22
  93:../src/uart.c **** 	uart0_puts( p ); // Env�a la cadena
 2289              		.loc 1 93 0
 2290 03d4 10001BE5 		ldr	r0, [fp, #-16]
 2291 03d8 FEFFFFEB 		bl	uart0_puts
  94:../src/uart.c **** }
 2292              		.loc 1 94 0
 2293 03dc 0CD04BE2 		sub	sp, fp, #12
 2294 03e0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2295 03e4 1EFF2FE1 		bx	lr
 2296              		.cfi_endproc
 2297              	.LFE4:
 2299              		.align	2
 2300              		.global	uart0_getchar
 2302              	uart0_getchar:
 2303              	.LFB5:
  95:../src/uart.c **** 
  96:../src/uart.c **** /*
  97:../src/uart.c **** ** Devuelve un caracter recibido por la UART (espera hasta que llegue)
  98:../src/uart.c **** */
  99:../src/uart.c **** char uart0_getchar( void ){
 2304              		.loc 1 99 0
 2305              		.cfi_startproc
 2306              		@ Function supports interworking.
 2307              		@ args = 0, pretend = 0, frame = 0
 2308              		@ frame_needed = 1, uses_anonymous_args = 0
 2309 03e8 0DC0A0E1 		mov	ip, sp
 2310              	.LCFI10:
 2311              		.cfi_def_cfa_register 12
 2312 03ec 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2313 03f0 04B04CE2 		sub	fp, ip, #4
 2314              		.cfi_offset 14, -8
 2315              		.cfi_offset 13, -12
 2316              		.cfi_offset 11, -16
 2317              	.LCFI11:
 2318              		.cfi_def_cfa 11, 4
 100:../src/uart.c **** 	while( (UFSTAT0 & 0xf) == 0 );
 2319              		.loc 1 100 0
 2320 03f4 0000A0E1 		mov	r0, r0	@ nop
 2321              	.L24:
 2322              		.loc 1 100 0 is_stmt 0 discriminator 1
 2323 03f8 28309FE5 		ldr	r3, .L25
 2324 03fc 003093E5 		ldr	r3, [r3, #0]
 2325 0400 0F3003E2 		and	r3, r3, #15
 2326 0404 000053E3 		cmp	r3, #0
 2327 0408 FAFFFF0A 		beq	.L24
 101:../src/uart.c **** 	return URXH0;
 2328              		.loc 1 101 0 is_stmt 1
 2329 040c 18309FE5 		ldr	r3, .L25+4
 2330 0410 003093E5 		ldr	r3, [r3, #0]
 2331 0414 FF3003E2 		and	r3, r3, #255
 102:../src/uart.c **** }
 2332              		.loc 1 102 0
 2333 0418 0300A0E1 		mov	r0, r3
 2334 041c 0CD04BE2 		sub	sp, fp, #12
 2335 0420 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2336 0424 1EFF2FE1 		bx	lr
 2337              	.L26:
 2338              		.align	2
 2339              	.L25:
 2340 0428 1800D001 		.word	30408728
 2341 042c 2400D001 		.word	30408740
 2342              		.cfi_endproc
 2343              	.LFE5:
 2345              		.align	2
 2346              		.global	uart0_gets
 2348              	uart0_gets:
 2349              	.LFB6:
 103:../src/uart.c **** 
 104:../src/uart.c **** /*
 105:../src/uart.c **** ** Forma una cadena con los caracteres recibidos por la UART hasta la recepci�n de '\n'
 106:../src/uart.c **** */
 107:../src/uart.c **** void uart0_gets( char *s ){
 2350              		.loc 1 107 0
 2351              		.cfi_startproc
 2352              		@ Function supports interworking.
 2353              		@ args = 0, pretend = 0, frame = 16
 2354              		@ frame_needed = 1, uses_anonymous_args = 0
 2355 0430 0DC0A0E1 		mov	ip, sp
 2356              	.LCFI12:
 2357              		.cfi_def_cfa_register 12
 2358 0434 10D82DE9 		stmfd	sp!, {r4, fp, ip, lr, pc}
 2359 0438 04B04CE2 		sub	fp, ip, #4
 2360              		.cfi_offset 14, -8
 2361              		.cfi_offset 13, -12
 2362              		.cfi_offset 11, -16
 2363              		.cfi_offset 4, -20
 2364              	.LCFI13:
 2365              		.cfi_def_cfa 11, 4
 2366 043c 14D04DE2 		sub	sp, sp, #20
 2367 0440 20000BE5 		str	r0, [fp, #-32]
 108:../src/uart.c **** 	uint8 i=0;
 2368              		.loc 1 108 0
 2369 0444 0030A0E3 		mov	r3, #0
 2370 0448 15304BE5 		strb	r3, [fp, #-21]
 109:../src/uart.c **** 	s[i] = uart0_getchar();
 2371              		.loc 1 109 0
 2372 044c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2373 0450 20201BE5 		ldr	r2, [fp, #-32]
 2374 0454 034082E0 		add	r4, r2, r3
 2375 0458 FEFFFFEB 		bl	uart0_getchar
 2376 045c 0030A0E1 		mov	r3, r0
 2377 0460 0030C4E5 		strb	r3, [r4, #0]
 110:../src/uart.c **** 	while(s[i] != '\n') {
 2378              		.loc 1 110 0
 2379 0464 080000EA 		b	.L28
 2380              	.L29:
 111:../src/uart.c **** 		i++;
 2381              		.loc 1 111 0
 2382 0468 15305BE5 		ldrb	r3, [fp, #-21]
 2383 046c 013083E2 		add	r3, r3, #1
 2384 0470 15304BE5 		strb	r3, [fp, #-21]
 112:../src/uart.c **** 		s[i] = uart0_getchar();
 2385              		.loc 1 112 0
 2386 0474 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2387 0478 20201BE5 		ldr	r2, [fp, #-32]
 2388 047c 034082E0 		add	r4, r2, r3
 2389 0480 FEFFFFEB 		bl	uart0_getchar
 2390 0484 0030A0E1 		mov	r3, r0
 2391 0488 0030C4E5 		strb	r3, [r4, #0]
 2392              	.L28:
 110:../src/uart.c **** 	while(s[i] != '\n') {
 2393              		.loc 1 110 0 discriminator 1
 2394 048c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2395 0490 20201BE5 		ldr	r2, [fp, #-32]
 2396 0494 033082E0 		add	r3, r2, r3
 2397 0498 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2398 049c 0A0053E3 		cmp	r3, #10
 2399 04a0 F0FFFF1A 		bne	.L29
 113:../src/uart.c **** 	}
 114:../src/uart.c **** 	s[i] = '\0';
 2400              		.loc 1 114 0
 2401 04a4 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2402 04a8 20201BE5 		ldr	r2, [fp, #-32]
 2403 04ac 033082E0 		add	r3, r2, r3
 2404 04b0 0020A0E3 		mov	r2, #0
 2405 04b4 0020C3E5 		strb	r2, [r3, #0]
 115:../src/uart.c **** }
 2406              		.loc 1 115 0
 2407 04b8 10D04BE2 		sub	sp, fp, #16
 2408 04bc 10689DE8 		ldmfd	sp, {r4, fp, sp, lr}
 2409 04c0 1EFF2FE1 		bx	lr
 2410              		.cfi_endproc
 2411              	.LFE6:
 2413              		.align	2
 2414              		.global	uart0_getint
 2416              	uart0_getint:
 2417              	.LFB7:
 116:../src/uart.c **** 
 117:../src/uart.c **** /*
 118:../src/uart.c **** ** Forma una cadena con los caracteres recibidos por la UART hasta la recepci�n de '\n' y los int
 119:../src/uart.c **** */
 120:../src/uart.c **** int32 uart0_getint( void ){
 2418              		.loc 1 120 0
 2419              		.cfi_startproc
 2420              		@ Function supports interworking.
 2421              		@ args = 0, pretend = 0, frame = 16
 2422              		@ frame_needed = 1, uses_anonymous_args = 0
 2423 04c4 0DC0A0E1 		mov	ip, sp
 2424              	.LCFI14:
 2425              		.cfi_def_cfa_register 12
 2426 04c8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2427 04cc 04B04CE2 		sub	fp, ip, #4
 2428              		.cfi_offset 14, -8
 2429              		.cfi_offset 13, -12
 2430              		.cfi_offset 11, -16
 2431              	.LCFI15:
 2432              		.cfi_def_cfa 11, 4
 2433 04d0 10D04DE2 		sub	sp, sp, #16
 121:../src/uart.c **** 	int32 num=0, signo=1;
 2434              		.loc 1 121 0
 2435 04d4 0030A0E3 		mov	r3, #0
 2436 04d8 10300BE5 		str	r3, [fp, #-16]
 2437 04dc 0130A0E3 		mov	r3, #1
 2438 04e0 14300BE5 		str	r3, [fp, #-20]
 122:../src/uart.c **** 	uint8 c = uart0_getchar();
 2439              		.loc 1 122 0
 2440 04e4 FEFFFFEB 		bl	uart0_getchar
 2441 04e8 0030A0E1 		mov	r3, r0
 2442 04ec 15304BE5 		strb	r3, [fp, #-21]
 123:../src/uart.c **** 	if(c == '-'){
 2443              		.loc 1 123 0
 2444 04f0 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2445 04f4 2D0053E3 		cmp	r3, #45
 2446 04f8 1300001A 		bne	.L32
 124:../src/uart.c **** 		signo = -1;
 2447              		.loc 1 124 0
 2448 04fc 0030E0E3 		mvn	r3, #0
 2449 0500 14300BE5 		str	r3, [fp, #-20]
 125:../src/uart.c **** 		c = uart0_getchar();
 2450              		.loc 1 125 0
 2451 0504 FEFFFFEB 		bl	uart0_getchar
 2452 0508 0030A0E1 		mov	r3, r0
 2453 050c 15304BE5 		strb	r3, [fp, #-21]
 126:../src/uart.c **** 	}
 127:../src/uart.c **** 
 128:../src/uart.c **** 	while(c != '\n') {
 2454              		.loc 1 128 0
 2455 0510 0D0000EA 		b	.L32
 2456              	.L33:
 129:../src/uart.c **** 		num *= 10;
 2457              		.loc 1 129 0
 2458 0514 10201BE5 		ldr	r2, [fp, #-16]
 2459 0518 0230A0E1 		mov	r3, r2
 2460 051c 0331A0E1 		mov	r3, r3, asl #2
 2461 0520 023083E0 		add	r3, r3, r2
 2462 0524 8330A0E1 		mov	r3, r3, asl #1
 2463 0528 10300BE5 		str	r3, [fp, #-16]
 130:../src/uart.c **** 		num += c - 48;
 2464              		.loc 1 130 0
 2465 052c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2466 0530 303043E2 		sub	r3, r3, #48
 2467 0534 10201BE5 		ldr	r2, [fp, #-16]
 2468 0538 033082E0 		add	r3, r2, r3
 2469 053c 10300BE5 		str	r3, [fp, #-16]
 131:../src/uart.c **** 		c = uart0_getchar();
 2470              		.loc 1 131 0
 2471 0540 FEFFFFEB 		bl	uart0_getchar
 2472 0544 0030A0E1 		mov	r3, r0
 2473 0548 15304BE5 		strb	r3, [fp, #-21]
 2474              	.L32:
 128:../src/uart.c **** 	while(c != '\n') {
 2475              		.loc 1 128 0 discriminator 1
 2476 054c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 2477 0550 0A0053E3 		cmp	r3, #10
 2478 0554 EEFFFF1A 		bne	.L33
 132:../src/uart.c **** 	}
 133:../src/uart.c **** 	return num*signo;
 2479              		.loc 1 133 0
 2480 0558 10301BE5 		ldr	r3, [fp, #-16]
 2481 055c 14201BE5 		ldr	r2, [fp, #-20]
 2482 0560 920303E0 		mul	r3, r2, r3
 134:../src/uart.c **** 
 135:../src/uart.c **** }
 2483              		.loc 1 135 0
 2484 0564 0300A0E1 		mov	r0, r3
 2485 0568 0CD04BE2 		sub	sp, fp, #12
 2486 056c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2487 0570 1EFF2FE1 		bx	lr
 2488              		.cfi_endproc
 2489              	.LFE7:
 2491              		.align	2
 2492              		.global	uart0_gethex
 2494              	uart0_gethex:
 2495              	.LFB8:
 136:../src/uart.c **** 
 137:../src/uart.c **** /*
 138:../src/uart.c **** ** Forma una cadena con los caracteres recibidos por la UART hasta la recepci�n de '\n' y los int
 139:../src/uart.c **** */
 140:../src/uart.c **** uint32 uart0_gethex( void ){
 2496              		.loc 1 140 0
 2497              		.cfi_startproc
 2498              		@ Function supports interworking.
 2499              		@ args = 0, pretend = 0, frame = 8
 2500              		@ frame_needed = 1, uses_anonymous_args = 0
 2501 0574 0DC0A0E1 		mov	ip, sp
 2502              	.LCFI16:
 2503              		.cfi_def_cfa_register 12
 2504 0578 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2505 057c 04B04CE2 		sub	fp, ip, #4
 2506              		.cfi_offset 14, -8
 2507              		.cfi_offset 13, -12
 2508              		.cfi_offset 11, -16
 2509              	.LCFI17:
 2510              		.cfi_def_cfa 11, 4
 2511 0580 08D04DE2 		sub	sp, sp, #8
 141:../src/uart.c **** 	int32 num=0;
 2512              		.loc 1 141 0
 2513 0584 0030A0E3 		mov	r3, #0
 2514 0588 10300BE5 		str	r3, [fp, #-16]
 142:../src/uart.c **** 	uint8 c;
 143:../src/uart.c **** 
 144:../src/uart.c **** 	c = uart0_getchar();
 2515              		.loc 1 144 0
 2516 058c FEFFFFEB 		bl	uart0_getchar
 2517 0590 0030A0E1 		mov	r3, r0
 2518 0594 11304BE5 		strb	r3, [fp, #-17]
 145:../src/uart.c **** 	while(c != '\n') {
 2519              		.loc 1 145 0
 2520 0598 310000EA 		b	.L35
 2521              	.L39:
 146:../src/uart.c **** 
 147:../src/uart.c **** 		if(c >= '0' && c <= '9')
 2522              		.loc 1 147 0
 2523 059c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2524 05a0 2F0053E3 		cmp	r3, #47
 2525 05a4 0800009A 		bls	.L36
 2526              		.loc 1 147 0 is_stmt 0 discriminator 1
 2527 05a8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2528 05ac 390053E3 		cmp	r3, #57
 2529 05b0 0500008A 		bhi	.L36
 148:../src/uart.c **** 			num += c - '0';
 2530              		.loc 1 148 0 is_stmt 1
 2531 05b4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2532 05b8 303043E2 		sub	r3, r3, #48
 2533 05bc 10201BE5 		ldr	r2, [fp, #-16]
 2534 05c0 033082E0 		add	r3, r2, r3
 2535 05c4 10300BE5 		str	r3, [fp, #-16]
 2536 05c8 160000EA 		b	.L37
 2537              	.L36:
 149:../src/uart.c **** 		else if(c >= 'A' && c <= 'F')
 2538              		.loc 1 149 0
 2539 05cc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2540 05d0 400053E3 		cmp	r3, #64
 2541 05d4 0800009A 		bls	.L38
 2542              		.loc 1 149 0 is_stmt 0 discriminator 1
 2543 05d8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2544 05dc 460053E3 		cmp	r3, #70
 2545 05e0 0500008A 		bhi	.L38
 150:../src/uart.c **** 			num += c - 55;
 2546              		.loc 1 150 0 is_stmt 1
 2547 05e4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2548 05e8 373043E2 		sub	r3, r3, #55
 2549 05ec 10201BE5 		ldr	r2, [fp, #-16]
 2550 05f0 033082E0 		add	r3, r2, r3
 2551 05f4 10300BE5 		str	r3, [fp, #-16]
 2552 05f8 0A0000EA 		b	.L37
 2553              	.L38:
 151:../src/uart.c **** 		else if(c >= 'a' && c <= 'f')
 2554              		.loc 1 151 0
 2555 05fc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2556 0600 600053E3 		cmp	r3, #96
 2557 0604 0700009A 		bls	.L37
 2558              		.loc 1 151 0 is_stmt 0 discriminator 1
 2559 0608 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2560 060c 660053E3 		cmp	r3, #102
 2561 0610 0400008A 		bhi	.L37
 152:../src/uart.c **** 				num += c - 87;
 2562              		.loc 1 152 0 is_stmt 1
 2563 0614 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2564 0618 573043E2 		sub	r3, r3, #87
 2565 061c 10201BE5 		ldr	r2, [fp, #-16]
 2566 0620 033082E0 		add	r3, r2, r3
 2567 0624 10300BE5 		str	r3, [fp, #-16]
 2568              	.L37:
 153:../src/uart.c **** 		num *= 16;
 2569              		.loc 1 153 0
 2570 0628 10301BE5 		ldr	r3, [fp, #-16]
 2571 062c 0332A0E1 		mov	r3, r3, asl #4
 2572 0630 10300BE5 		str	r3, [fp, #-16]
 154:../src/uart.c **** 		c = uart0_getchar();
 2573              		.loc 1 154 0
 2574 0634 FEFFFFEB 		bl	uart0_getchar
 2575 0638 0030A0E1 		mov	r3, r0
 2576 063c 11304BE5 		strb	r3, [fp, #-17]
 155:../src/uart.c **** 		if(c == '\n')
 2577              		.loc 1 155 0
 2578 0640 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2579 0644 0A0053E3 		cmp	r3, #10
 2580 0648 0500001A 		bne	.L35
 156:../src/uart.c **** 			num /= 16;
 2581              		.loc 1 156 0
 2582 064c 10301BE5 		ldr	r3, [fp, #-16]
 2583 0650 0F2083E2 		add	r2, r3, #15
 2584 0654 000053E3 		cmp	r3, #0
 2585 0658 0230A0B1 		movlt	r3, r2
 2586 065c 4332A0E1 		mov	r3, r3, asr #4
 2587 0660 10300BE5 		str	r3, [fp, #-16]
 2588              	.L35:
 145:../src/uart.c **** 	while(c != '\n') {
 2589              		.loc 1 145 0 discriminator 1
 2590 0664 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2591 0668 0A0053E3 		cmp	r3, #10
 2592 066c CAFFFF1A 		bne	.L39
 157:../src/uart.c **** 	}
 158:../src/uart.c **** 	return num;
 2593              		.loc 1 158 0
 2594 0670 10301BE5 		ldr	r3, [fp, #-16]
 159:../src/uart.c **** }
 2595              		.loc 1 159 0
 2596 0674 0300A0E1 		mov	r0, r3
 2597 0678 0CD04BE2 		sub	sp, fp, #12
 2598 067c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2599 0680 1EFF2FE1 		bx	lr
 2600              		.cfi_endproc
 2601              	.LFE8:
 2603              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:1882   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:1885   .text:00000000 uart0_init
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:1955   .text:000000b0 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:1962   .text:000000c0 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:1965   .text:000000c0 uart0_putchar
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2007   .text:00000110 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2012   .text:00000118 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2015   .text:00000118 uart0_puts
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2069   .text:00000180 uart0_putint
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2216   .text:0000032c $d
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2220   .text:00000330 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2223   .text:00000330 uart0_puthex
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2302   .text:000003e8 uart0_getchar
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2340   .text:00000428 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2345   .text:00000430 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2348   .text:00000430 uart0_gets
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2416   .text:000004c4 uart0_getint
C:\Users\USUARI~1\AppData\Local\Temp\ccaN3OnU.s:2494   .text:00000574 uart0_gethex
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
